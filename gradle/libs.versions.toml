[versions]
# Project
version_code = "30006"
version_name = "3.0.6"
android_gradle_plugin = "8.4.1"
kotlin = "2.0.0"
android_sdk_compile = "34"
android_sdk_target = "33"
android_sdk_min = "24"

# Plugins
dependencyanalysis = "1.31.0"

# General dependencies
logging = "3.0.5"
logback = "1.2.11"
logcat = "0.1"

# KotlinX
kotlinx_coroutines = "1.8.1"
kotlinx_serialization = "1.6.3"
kotlinx_collections_immutable = "0.3.7"
kotlinx_datetime = "0.6.0"

# AndroidX
activity = "1.9.0"
core = "1.13.1"
appcompat = "1.6.1"
corektx = "1.13.1"
playcore = "1.10.3"
datastore = "1.1.1"
glance = "1.0.0"
workmanager = "2.9.0"
lifecycle_viewmodel = "2.8.0"
annotation = "1.8.0"

# Compose
compose_bom = "2024.05.00"
compose_activity = "1.9.0"
compose_compiler = "1.6.10"
compose_windowsizeclass = "0.5.0"

# Koin
koin_core = "3.5.0"
koin_test = "3.5.6"
koin_android = "3.5.6"
koin_compose_jb = "1.1.0"

# SQLDelight
sqldelight = "2.0.0"

# Moko
moko = "0.16.1"
moko_resources = "0.24.0-beta-4"
moko_permissions = "0.18.0"

# AtomicFU
atomicfu = "0.24.0"

# Voyager
voyager = "1.1.0-alpha04"

# Test
test_junit = "4.13.2"
test_uiautomator = "2.3.0"
test_junit4_android = "1.6.7"
test_manifest = "1.6.7"

# Quality
ktlint = "1.2.1"
detekt = "1.23.6"
composerules = "0.4.1"

# License
aboutlibraries = "11.1.4"

[libraries]
# Project
android_gradle_plugin = { module = "com.android.tools.build:gradle", version.ref = "android_gradle_plugin" }
kotlin_gradle_plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin_atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }

# General dependencies
logging = { module = "io.github.microutils:kotlin-logging", version.ref = "logging" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logcat = { module = "com.squareup.logcat:logcat", version.ref = "logcat" }

# KotlinX
kotlinx_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
kotlinx_coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx_coroutines" }
kotlinx_serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx_serialization" }
kotlinx_collections_immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx_collections_immutable" }
kotlinx_datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx_datetime" }

# AndroidX
androidx_activity = { module = "androidx.activity:activity", version.ref = "activity" }
androidx_core = { module = "androidx.core:core", version.ref = "core" }
androidx_appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx_corektx = { module = "androidx.core:core-ktx", version.ref = "corektx" }
androidx_playcore = { module = "com.google.android.play:core", version.ref = "playcore" }
androidx_datastore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
androidx_glance = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
androidx_glance_material3 = { module = "androidx.glance:glance-material3", version.ref = "glance" }
androidx_workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
androidx_lifecycle_viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle_viewmodel" }
androidx_annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }

compose_bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose_bom" }
compose_ui = { module = "androidx.compose.ui:ui" }
compose_icons = { module = "androidx.compose.material:material-icons-extended" }
compose_material3 = { module = "androidx.compose.material3:material3" }
compose_windowsizeclass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "compose_windowsizeclass" }

# Dynamic Feature don't recognize BOM
compose_activity = { module = "androidx.activity:activity-compose", version.ref = "compose_activity" }

#Koin
koin_core = { module = "io.insert-koin:koin-core", version.ref = "koin_core" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin_android" }
koin_test = { module = "io.insert-koin:koin-test", version.ref = "koin_test" }
koin_compose_jb = { module = "io.insert-koin:koin-compose", version.ref = "koin_compose_jb" }

# SQLDelight
sqldelight_driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight_native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight_coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# Moko
moko_mvvm_core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko" }
moko_mvvm_compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "moko" }
moko_resources_generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko_resources" }
moko_resources_core = { module = "dev.icerock.moko:resources", version.ref = "moko_resources" }
moko_resources_compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko_resources" }
moko_permissions_compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko_permissions" }

# Voyager
voyager_navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager_bottomsheet = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }

# Test
test_junit = { module = "junit:junit", version.ref = "test_junit" }
test_uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "test_uiautomator" }

test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "test_junit4_android" }
test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "test_manifest" }

# Quality
ktlint = { module = "com.pinterest.ktlint:ktlint-cli", version.ref = "ktlint" }
detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
composerules-detekt = { module = "io.nlopez.compose.rules:detekt", version.ref = "composerules" }
composerules-ktlint = { module = "io.nlopez.compose.rules:ktlint", version.ref = "composerules" }

# License
aboutlibraries_plugin = { module = "com.mikepenz.aboutlibraries.plugin:aboutlibraries-plugin", version.ref = "aboutlibraries" }
aboutlibraries_ui = { module = "com.mikepenz:aboutlibraries-compose", version.ref = "aboutlibraries" }

[bundles]
compose = ["compose.ui", "compose.icons", "compose.material3"]

[plugins]
kotlin_serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dependencyanalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyanalysis" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
compose = { id = "org.jetbrains.compose", version.ref = "compose_compiler" }
moko_multiplatform_resources = { id = "dev.icerock.mobile.multiplatform-resources" }

compose_compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
